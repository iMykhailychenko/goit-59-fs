{"version":3,"file":"static/js/431.68e67fca.chunk.js","mappings":"wPAwFA,UA5EsB,WAAO,IAAD,IACpBA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,MAAM,IAChDG,GAAQF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMA,KAAK,IAEpD,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAA+B,QAA3B,EAAGF,EAAaG,IAAI,eAAO,QAAI,EACnCC,EAAwC,QAA7B,EAAGJ,EAAaG,IAAI,iBAAS,QAAI,GAElD,GAA4BE,EAAAA,EAAAA,UAASD,GAAY,eAA1CE,EAAM,KAAEC,EAAS,KAElBC,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,OAAOC,KAAS,SAAAJ,GACdL,EAAgB,CAAEC,KAAM,EAAGI,OAAAA,GAC7B,GAAG,IACL,GAAG,CAACL,IAWJ,OAJAU,EAAAA,EAAAA,YAAU,WACRlB,GAASmB,EAAAA,EAAAA,GAAc,CAAEV,KAAAA,EAAMI,OAAQF,IACzC,GAAG,CAACX,EAAUS,EAAME,KAGlB,iCACE,kBACES,KAAK,OACLC,UAAU,oBACVC,YAAY,oBACZC,MAAOV,EACPW,SAhBe,SAAAC,GACnBX,EAAUW,EAAMC,OAAOH,OACvBR,EAAYU,EAAMC,OAAOH,MAC3B,KAgBMrB,IAAWyB,EAAAA,EAAAA,SAAkBzB,IAAWyB,EAAAA,EAAAA,QAAgB,SAAC,IAAW,IAErEzB,IAAWyB,EAAAA,EAAAA,QAAgB,SAAC,IAAQ,KAErC,gBAAKN,UAAU,gCAA+B,UAC5C,gBAAKA,UAAU,MAAK,SACZ,OAALhB,QAAK,IAALA,OAAK,EAALA,EAAOuB,KAAKC,KAAI,SAAAC,GAAI,OACnB,SAAC,IAAS,CAAeA,KAAMA,GAAfA,EAAKC,GAAkB,SAKvC,OAAL1B,QAAK,IAALA,OAAK,EAALA,EAAO2B,eACN,gBAAKX,UAAU,aAAY,UACzB,gBAAKA,UAAU,sCAAqC,UACjD,OAAIY,MAAM5B,EAAM2B,cAAcH,KAAI,SAACK,EAAGC,GACrC,IAAMC,EAAYD,EAAQ,EAE1B,OACE,mBAEEf,KAAK,SACLiB,SAAUD,IAAc/B,EAAMI,KAC9BY,UAAU,kBACViB,QAAS,WAEP9B,EAAgB,CAAEC,KAAM2B,EAAWvB,OAAQF,GAC7C,EAAE,SAEDyB,GATID,EAYX,UAMZ,C","sources":["pages/PostsListPage/PostsListPage.jsx"],"sourcesContent":["import { useMemo, useEffect, useState } from 'react';\n\nimport debounce from 'lodash/debounce';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { NotFound } from '../../components/NotFound/NotFound';\nimport { PostsItem } from '../../components/Posts/PostsItem';\nimport { PostsLoader } from '../../components/Posts/PostsLoader';\nimport { STATUS } from '../../constants/status.constants';\nimport { getPostsThunk } from '../../redux/posts/posts.thunk';\n\nconst PostsListPage = () => {\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.posts.status);\n  const posts = useSelector(state => state.posts.posts);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') ?? 1;\n  const searchQuery = searchParams.get('search') ?? '';\n\n  const [search, setSearch] = useState(searchQuery);\n\n  const searchPosts = useMemo(() => {\n    return debounce(search => {\n      setSearchParams({ page: 1, search }); // localhost.../?page=1&search=javascript\n    }, 500);\n  }, [setSearchParams]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n    searchPosts(event.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(getPostsThunk({ page, search: searchQuery }));\n  }, [dispatch, page, searchQuery]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"form-control mb-4\"\n        placeholder=\"Type to search...\"\n        value={search}\n        onChange={handleSearch}\n      />\n\n      {(status === STATUS.loading || status === STATUS.idle) && <PostsLoader />}\n\n      {status === STATUS.error && <NotFound />}\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {posts?.data.map(post => (\n            <PostsItem key={post.id} post={post} />\n          ))}\n        </div>\n      </div>\n\n      {posts?.total_pages && (\n        <div className=\"pagination\">\n          <div className=\"btn-group my-2 mx-auto btn-group-lg\">\n            {[...Array(posts.total_pages)].map((_, index) => {\n              const innerPage = index + 1;\n\n              return (\n                <button\n                  key={index}\n                  type=\"button\"\n                  disabled={innerPage === posts.page}\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    // setSearchParams({ page: 2, data: 'data', test: 'test' }); // '?page=2&data=data&test=test'\n                    setSearchParams({ page: innerPage, search: searchQuery });\n                  }}\n                >\n                  {innerPage}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostsListPage;\n"],"names":["dispatch","useDispatch","status","useSelector","state","posts","useSearchParams","searchParams","setSearchParams","page","get","searchQuery","useState","search","setSearch","searchPosts","useMemo","debounce","useEffect","getPostsThunk","type","className","placeholder","value","onChange","event","target","STATUS","data","map","post","id","total_pages","Array","_","index","innerPage","disabled","onClick"],"sourceRoot":""}