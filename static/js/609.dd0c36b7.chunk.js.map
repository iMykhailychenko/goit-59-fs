{"version":3,"file":"static/js/609.dd0c36b7.chunk.js","mappings":"+NAEaA,EAAW,WACtB,OACE,iBAAKC,UAAU,+DAA8D,WAC3E,gBAAKC,IAAKC,EAAOC,IAAI,YAAYC,MAAO,CAAEC,MAAO,QACjD,cAAGL,UAAU,OAAM,8OAGzB,C,+GCPaM,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,WAAY,EACrDC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,IAAK,EACxCC,EAAoB,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAO,EAahDC,GAAsBC,EAAAA,EAAAA,IACjC,CAACH,EAAmBF,IAEpB,SAACG,EAAQL,GAAK,OACZA,EAAMQ,QAAO,SAAAC,GAAI,OACfA,EAAKC,KAAKC,cAAcC,SAASP,EAAOM,cAAc,GACvD,IAYQE,GAAwBN,EAAAA,EAAAA,IACnC,CAACL,IACD,SAAAF,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAKK,YAAY,IAAEC,MAAM,I,mBCrC5CC,EAAY,SAAH,GAA4B,IAAtBP,EAAI,EAAJA,KAAMQ,EAAQ,EAARA,SACxBC,EAA+CT,EAA/CS,GAAIR,EAA2CD,EAA3CC,KAAMS,EAAqCV,EAArCU,MAAOC,EAA8BX,EAA9BW,IAAKC,EAAyBZ,EAAzBY,OAAQP,EAAiBL,EAAjBK,aAItC,OACE,gBAAKtB,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAIA,UAAU,oBAAoBI,MAAO,CAAE0B,UAAW,IAAK,UACxDZ,EACAI,IACC,cAAGtB,UAAU,wBAAuB,8BAIxC,eAAIA,UAAU,gCAA+B,SAAE2B,KAC/C,cAAG3B,UAAU,YAAW,SAAE4B,KAE1B,gBAAK5B,UAAU,cAAa,SACzB6B,EAAOE,KAAI,SAAAC,GAAI,OACd,iBAAiBhC,UAAU,qBAAoB,SAC5CgC,GADQA,EAEJ,OAIX,gBAAKhC,UAAU,SAAQ,UACrB,mBACEiC,KAAK,SACLjC,UAAU,iCACVkC,QA3BW,WAAH,OAAST,EAASC,EAAI,EA2BR,0BAQlC,ECuCA,EA3DkB,WAChB,IAAMS,GAAWC,EAAAA,EAAAA,MAEXvB,GAASwB,EAAAA,EAAAA,IAAYzB,GACrBJ,GAAQ6B,EAAAA,EAAAA,IAAYvB,GACpBwB,GAAkBD,EAAAA,EAAAA,IAAYhB,GAW9BkB,EAAe,SAAAb,GACnBS,GAASK,EAAAA,EAAAA,IAAiBd,IAC1Be,EAAAA,GAAAA,KACF,EAEMhC,GAAc4B,EAAAA,EAAAA,IAAY/B,GAKhC,OACE,iCACE,mBAAQ2B,KAAK,SAASjC,UAAU,kBAAkBkC,QANlC,WAClBC,GAASO,EAAAA,EAAAA,MACX,EAI2E,0BAGtEjC,IAAe,qCAEhB,gBAAKT,UAAU,mBAAkB,UAC/B,kBACE2C,MAAO9B,EACP+B,SA5Ba,SAAAC,GACnBV,GACEW,EAAAA,EAAAA,IACED,EAAME,OAAOJ,OAGnB,EAuBQV,KAAK,SACLjC,UAAU,eACVgD,YAAY,8BAIhB,yCAAiBxC,EAAMe,WACvB,gDAAwBe,MAExB,gBAAKtC,UAAU,OAAM,SAClBQ,EAAMe,OACLf,EAAMuB,KAAI,SAAAd,GAAI,OACZ,SAACO,EAAS,CAAeP,KAAMA,EAAMQ,SAAUc,GAA/BtB,EAAKS,GAA0C,KAGjE,SAAC3B,EAAA,EAAQ,QAKnB,C","sources":["components/NotFound/NotFound.jsx","redux/users/users.selector.js","pages/ExercisesPage/UsersPage/UsersItem.jsx","pages/ExercisesPage/UsersPage/UsersPage.jsx"],"sourcesContent":["import image from './713761_big_8857bc5285.jpeg';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошол отрицательний поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsModalOpen = state => state.users.isModalOpen;\nexport const selectUsers = state => state.users.data;\nexport const selectUsersSearch = state => state.users.search;\n\n// export const selectFilteredUsers = state => {\n//   const users = selectUsers(state);\n//   const search = selectUsersSearch(state);\n\n//   console.log('in selectFilteredUsers');\n\n//   return users.filter(user =>\n//     user.name.toLowerCase().includes(search.toLowerCase()),\n//   );\n// };\n\nexport const selectFilteredUsers = createSelector(\n  [selectUsersSearch, selectUsers],\n\n  (search, users) =>\n    users.filter(user =>\n      user.name.toLowerCase().includes(search.toLowerCase()),\n    ),\n);\n\n// [] === []\n\n// export const selectTotalOpenToWork = state => {\n//   const users = selectUsers(state);\n//   console.log('in selectTotalOpenToWork');\n\n//   return users.filter(user => user.isOpenToWork).length;\n// };\n\nexport const selectTotalOpenToWork = createSelector(\n  [selectUsers],\n  users => users.filter(user => user.isOpenToWork).length,\n);\n","export const UsersItem = ({ user, onDelete }) => {\n  const { id, name, email, bio, skills, isOpenToWork } = user;\n\n  const handleDelete = () => onDelete(id);\n\n  return (\n    <div className=\"card my-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title d-flex\" style={{ minHeight: 42 }}>\n          {name}\n          {isOpenToWork && (\n            <p className=\"badge bg-success ms-3\">Open to work</p>\n          )}\n        </h5>\n\n        <h6 className=\"card-subtitle mb-2 text-muted\">{email}</h6>\n        <p className=\"card-text\">{bio}</p>\n\n        <div className=\"d-flex mb-2\">\n          {skills.map(skil => (\n            <span key={skil} className=\"badge bg-dark me-1\">\n              {skil}\n            </span>\n          ))}\n        </div>\n\n        <div className=\"d-flex\">\n          <button\n            type=\"button\"\n            className=\"card-link btn-link link-danger\"\n            onClick={handleDelete}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { NotFound } from '../../../components/NotFound/NotFound';\nimport { confetti } from '../../../helpers/Confetti/Confetti';\nimport {\n  selectFilteredUsers,\n  selectIsModalOpen,\n  selectTotalOpenToWork,\n  selectUsersSearch,\n} from '../../../redux/users/users.selector';\nimport {\n  deleteUserAction,\n  toggleModalAction,\n  usersSearchAction,\n} from '../../../redux/users/users.slice';\n\nimport { UsersItem } from './UsersItem';\n\nconst UsersPage = () => {\n  const dispatch = useDispatch();\n\n  const search = useSelector(selectUsersSearch); // '' === ''\n  const users = useSelector(selectFilteredUsers); // [10] === [10] -> true\n  const totalOpenToWork = useSelector(selectTotalOpenToWork); // 5 -> 5\n  // const { users, search } = useSelector(state => state.users); // stop\n\n  const handleSearch = event => {\n    dispatch(\n      usersSearchAction(\n        event.target.value,\n      ) /* -> { type: SEARCH, payload: event.target.value } */,\n    );\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteUserAction(id));\n    confetti.run();\n  };\n\n  const isModalOpen = useSelector(selectIsModalOpen); // true -> false\n  const toggleModal = () => {\n    dispatch(toggleModalAction());\n  };\n\n  return (\n    <>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={toggleModal}>\n        Toggle modal\n      </button>\n      {isModalOpen && <p>My modal</p>}\n\n      <div className=\"input-group mb-3\">\n        <input\n          value={search}\n          onChange={handleSearch}\n          type=\"search\"\n          className=\"form-control\"\n          placeholder=\"Search user by name...\"\n        />\n      </div>\n\n      <p>Total users: {users.length}</p>\n      <p>Total Open to Work: {totalOpenToWork}</p>\n\n      <div className=\"mb-5\">\n        {users.length ? (\n          users.map(user => (\n            <UsersItem key={user.id} user={user} onDelete={handleDelete} />\n          ))\n        ) : (\n          <NotFound />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default UsersPage;\n"],"names":["NotFound","className","src","image","alt","style","width","selectIsModalOpen","state","users","isModalOpen","selectUsers","data","selectUsersSearch","search","selectFilteredUsers","createSelector","filter","user","name","toLowerCase","includes","selectTotalOpenToWork","isOpenToWork","length","UsersItem","onDelete","id","email","bio","skills","minHeight","map","skil","type","onClick","dispatch","useDispatch","useSelector","totalOpenToWork","handleDelete","deleteUserAction","confetti","toggleModalAction","value","onChange","event","usersSearchAction","target","placeholder"],"sourceRoot":""}