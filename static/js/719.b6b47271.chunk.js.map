{"version":3,"file":"static/js/719.b6b47271.chunk.js","mappings":"2LAIaA,EAAa,SAAAC,GACxB,IAAMC,EAAeD,EAAU,IAEzBE,EAAeF,EAAU,IACzBG,EAAgBC,KAAKC,MAAMH,GAAgB,GAC3CI,EAAgBF,KAAKC,MAAMH,EAAe,IAAM,GAEtD,OAXa,WAAc,IAAD,uBAATK,EAAI,yBAAJA,EAAI,gBACrB,OAAOA,EAAKC,KAAK,IACnB,CASSC,CACLC,OAAOJ,GAAeK,SAAS,EAAG,KAClCD,OAAOP,GAAeQ,SAAS,EAAG,KAClCD,OAAOT,GAAcU,SAAS,EAAG,KAErC,E,SCgCA,EA3CkB,WAChB,IAAMC,GAAMC,EAAAA,EAAAA,QAAO,MACnB,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAA5BC,EAAI,KAAEC,EAAO,KAWdC,EAAkB,WAClBL,EAAIM,UACNC,cAAcP,EAAIM,SAClBN,EAAIM,QAAU,KAElB,EAQA,OANAE,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLH,GACF,CACF,GAAG,KAGD,iCACE,cAAGI,UAAU,sBAAqB,SAAEtB,EAAWgB,MAE/C,iBAAKM,UAAU,gCAA+B,WAC5C,SAACC,EAAA,EAAM,CAACD,UAAU,yBAAyBE,QAASN,EAAgB,mBAIpE,SAACK,EAAA,EAAM,CAACD,UAAU,0BAA0BE,QA/BzB,WAClBX,EAAIM,UACPN,EAAIM,QAAUM,aAAY,WACxBR,GAAQ,SAAAS,GAAI,OAAIA,EAAO,CAAC,IACxBC,QAAQC,IAAI,cACd,GAAG,GAEP,EAwB4E,wBAM9E,C","sources":["helpers/time.js","pages/ExercisesPage/TimerPage/TimerPage.jsx"],"sourcesContent":["const concat = (...args) => {\n  return args.join(':');\n};\n\nexport const formatTime = seconds => {\n  const milliseconds = seconds % 1000;\n\n  const secondsOfset = seconds / 1000;\n  const secondsPassed = Math.floor(secondsOfset) % 60;\n  const minutesPassed = Math.floor(secondsOfset / 60) % 60;\n\n  return concat(\n    String(minutesPassed).padStart(2, '0'),\n    String(secondsPassed).padStart(2, '0'),\n    String(milliseconds).padStart(3, '0'),\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\n\nimport { Button } from '../../../components/Button/Button';\nimport { formatTime } from '../../../helpers/time';\n\nconst TimerPage = () => {\n  const ref = useRef(null);\n  const [time, setTime] = useState(0);\n\n  const handleStartTimer = () => {\n    if (!ref.current) {\n      ref.current = setInterval(() => {\n        setTime(prev => prev + 1);\n        console.log('setInterval');\n      }, 0);\n    }\n  };\n\n  const handleStopTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      handleStopTimer();\n    };\n  }, []);\n\n  return (\n    <>\n      <p className=\"h1 mb-4 text-center\">{formatTime(time)}</p>\n\n      <div className=\"d-flex justify-content-center\">\n        <Button className=\"btn-danger btn-lg mx-2\" onClick={handleStopTimer}>\n          Stop\n        </Button>\n\n        <Button className=\"btn-primary btn-lg mx-2\" onClick={handleStartTimer}>\n          Start\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default TimerPage;\n"],"names":["formatTime","seconds","milliseconds","secondsOfset","secondsPassed","Math","floor","minutesPassed","args","join","concat","String","padStart","ref","useRef","useState","time","setTime","handleStopTimer","current","clearInterval","useEffect","className","Button","onClick","setInterval","prev","console","log"],"sourceRoot":""}